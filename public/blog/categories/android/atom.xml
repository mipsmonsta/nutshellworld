<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | Nutshell World]]></title>
  <link href="http://nutshellworld.herokuapp.com/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://nutshellworld.herokuapp.com/"/>
  <updated>2013-09-02T14:01:31+08:00</updated>
  <id>http://nutshellworld.herokuapp.com/</id>
  <author>
    <name><![CDATA[TYJ]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ObjectAnimator and their use]]></title>
    <link href="http://nutshellworld.herokuapp.com/blog/2013/09/02/objectanimator-and-their-use/"/>
    <updated>2013-09-02T12:44:00+08:00</updated>
    <id>http://nutshellworld.herokuapp.com/blog/2013/09/02/objectanimator-and-their-use</id>
    <content type="html"><![CDATA[<h2>History</h2>

<p>Object animator was added in Android API 11 (Honeycomb i.e. 3.0). This class allows <em>targeting</em> objects (views or fragmentInstance.getView())
and animating their properties.</p>

<h2>Use</h2>

<pre><code>ObjectAnimator movingFragmentAnimator = ObjectAnimator.
            ofPropertyValuesHolder(&lt;target&gt;, &lt;PropertyValuesHolder value&gt;, &lt;PropertyValuesHolder value&gt;, ...);
</code></pre>

<p>Here you can see a static constructor that takes in <em>list</em> of PropertyValuesHolder values all
targeting the same view object.</p>

<p><strong>OR</strong></p>

<pre><code>ObjectAnimator darkHoverViewAnimator = ObjectAnimator.
            ofFloat(mDarkHoverView, "alpha", 0.0f, 0.5f);
</code></pre>

<p>Only one property of the target is to be animated here.</p>

<h2>PropertyValuesHolder</h2>

<pre><code>PropertyValuesHolder rotateX =  PropertyValuesHolder.ofFloat("rotationX", 40f);
</code></pre>

<p>Here you can see that <strong>rotationX</strong> is the property value to change and &ldquo;40f&rdquo; is the degree to turn about the x-axis.</p>

<h2>Tweaking Object Animator further <a id="tweaks"></a></h2>

<p>Duration of the animation can be changed:</p>

<pre><code>darkHoverViewAnimator.setDuration(long millisec)
</code></pre>

<p><strong>Default</strong> duration is 300 msec according to documentation.</p>

<p>How about starting animation with a delay:</p>

<pre><code>darkHoverViewAnimator.startDelay(long millisec)
</code></pre>

<h2>Starting animation of an Object animator</h2>

<pre><code>darkHoverViewAnimator.start()
</code></pre>

<h2>Starting animation of multiple Object Animators</h2>

<p>We achieve this by using a <em>AnimatorSet</em> instance instead of calling individual objectanimator&rsquo;s start().</p>

<pre><code>  AnimatorSet s = new AnimatorSet();
  s.playTogether(movingFragmentAnimator, darkHoverViewAnimator, movingFragmentRotator);
  s.addListener(listener); 
  s.start();
</code></pre>

<p>The animatorset allows the simultaneous playback of all animator&rsquo;s animation. When each object(target) starts their animation
depends of course on whether their startDelay property has been <a href="#tweaks">set</a>.</p>

<h2>Chaining even more animations to start after</h2>

<p>Notice the line <code>s.addListener(listener)</code>? The class of the listener in this case is <strong>Animator.AnimatorListener</strong>.
An instance of this AnimatorListener allows the overriding of four methods that corresponds to
specific instance of the animator&rsquo;s lifecycle.</p>

<pre><code>    AnimatorListener listener = new AnimatorListenerAdapter() {
            @Override
            public void onAnimationEnd(Animator arg0) {
                FragmentTransaction transaction = getFragmentManager().beginTransaction();
                transaction.setCustomAnimations(R.animator.slide_fragment_in, 0, 0,
                        R.animator.slide_fragment_out);
                transaction.add(R.id.move_to_back_container, mTextFragment);
                transaction.addToBackStack(null);
                transaction.commit();
            }
        };
</code></pre>

<p>We are only overriding the <em>onAnimationEnd</em>. There are other lifecycle events that we can also tracked:</p>

<ul>
<li>onAnimationCancel</li>
<li>onAnimationStart</li>
<li>onAnimationRepeat</li>
</ul>


<p>See <a href="http://developer.android.com/reference/android/animation/Animator.AnimatorListener.html">documentation for AnimatorListener to find out more</a>.</p>

<p>In the above code, we will add a fragment in at the end of AnimatorSet&rsquo;s animation. Interestingly,
doc for FragmentTransaction says</p>

<blockquote><p>abstract FragmentTransaction  <br/>
setCustomAnimations(int enter, int exit, int popEnter, int popExit)
<em>Desc:</em> Set specific animation resources to run for the fragments that are entering and exiting in this transaction.</p></blockquote>

<p>This means that mTextFragment will &ldquo;enter&rdquo; and &ldquo;pop out&rdquo; with the specified animation resource ids.
I suspect &ldquo;popEnter&rdquo; refers to the animation for the fragment beneath mTextFragment when it pops up.
We of course set this animation resource id to <em>&ldquo;zero&rdquo;</em>, indicating no animation at all.</p>

<h2>Specifying Object Animator in XML in lieu of code</h2>

<pre><code>&lt;objectAnimator xmlns:android="http://schemas.android.com/apk/res/android"
    android:valueFrom="0"
    android:valueTo="@dimen/slide_up_down_fraction"
    android:propertyName="yFraction"
    android:valueType="floatType"
    android:duration="@integer/slide_up_down_duration"&gt;
&lt;/objectAnimator&gt;
</code></pre>

<p>The xml objectAnimator file will go under the &ldquo;animator&rdquo; folder. It&rsquo;s resource identifier will be
R.animator.&lt;name_of_file>.</p>

<h2>Summary</h2>

<p>We saw how to use the following objects together or in partial isolation to achieve useful animations:
+ PropertyValuesHolder
+ ObjectAnimator
+ AnimatorSet
+ AnimatorListener.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Image DPI and Android]]></title>
    <link href="http://nutshellworld.herokuapp.com/blog/2013/09/02/image-dpi-and-android/"/>
    <updated>2013-09-02T10:22:00+08:00</updated>
    <id>http://nutshellworld.herokuapp.com/blog/2013/09/02/image-dpi-and-android</id>
    <content type="html"><![CDATA[<p>Android developer documents states that the baseline screen density is taken to be 160 pixels (px) per
inch. If your device has 240 px per inch (high density), a image of size 100px by 100px will appear larger on the baseline
baseline screen than the high density screen. Specially, the image will be 0.625 of an inch on baseline screen compared to
0.416 inch on the higher density screen.</p>

<p>Then how does <em>image dpi</em> relates to how Android serves up the image. The answer as I have researched is <strong>NOTHING</strong>.
Turns out the image dpi has no bearing on how large the images are displayed on the computer or cellphone screen.
It does however specify how large these images are printed on paper. For example, two images of 100px by 100px but at different
dpi of 200 dpi and 100 dpi will look the same size on the same cellphone screen. However, when printed,
the one with the higher dpi will print as half the dimension as the other.</p>

<p>You can refer to this <a href="http://www.scantips.com/no72dpi.html">scantips</a> for more on image dpi.</p>

<p>For us Android developers, we just have to stop worrying about image dpi. If only we
can do the same for screen density&hellip;lol.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Loading Screen Activity (AKA) SplashScreen for Android]]></title>
    <link href="http://nutshellworld.herokuapp.com/blog/2013/08/29/loading-screen-activity-aka-splashscreen-for-android/"/>
    <updated>2013-08-29T17:16:00+08:00</updated>
    <id>http://nutshellworld.herokuapp.com/blog/2013/08/29/loading-screen-activity-aka-splashscreen-for-android</id>
    <content type="html"><![CDATA[<p>I was dabbling with implementing <em>In App Purchase (IAB)</em>  for my Android app. According to Google documentation,
it would be best to change the UI instantly once the purchase was successful. However, this is not possible
for my app unless after a restart.</p>

<p>The documentation also advised to do a server query for the purchased item status every so often, preferably
everytime the app is started.</p>

<p>How I implemented my part of my app&rsquo;s IAB workflow is as such:</p>

<ol>
<li>User makes the purchase, but the UI of the app will only update after the next app&rsquo;s start up.</li>
<li>If the User download the app on his other devices for the first time, app will need to check for his
purchases before going into the main UI.</li>
</ol>


<p>The above use cases led me to implement a splash screen activity that will always run before my main UI activity.
However I have some optimizing to shorten the on screen time of this splash screen. After all, who likes to wait?</p>

<p>Some of the design choices to cut waiting time are:</p>

<ul>
<li>When the purchase transaction first came through, I would set a flag in the app to note this event.</li>
<li>Then I forced the app to shutdown and prompt the user to <em>restart</em> the app with a Toast message.</li>
<li>At the next start-up, the splash screen <code>onCreate()</code> code will check for the presence of the flag.

<ul>
<li>If the flag exists, the splashscreen quickly starts the main UI activity.</li>
<li>If not, this start-up could be the first start up on a device that newly install the app.

<ul>
<li>So the splashscreen activity will check with Google Play Services for any purchases. In this case
the splash screen may dwell longer on the screen becauses of server calls.</li>
</ul>
</li>
</ul>
</li>
</ul>


<p>To make the splash screen as unintrusive as possible, I also styled the activity using the
<code>android:theme="@android:style/Theme.Dialog</code> in the application manifest.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple JSON Array to string]]></title>
    <link href="http://nutshellworld.herokuapp.com/blog/2013/08/28/simple-json-array-to-string/"/>
    <updated>2013-08-28T19:22:00+08:00</updated>
    <id>http://nutshellworld.herokuapp.com/blog/2013/08/28/simple-json-array-to-string</id>
    <content type="html"><![CDATA[<p>Supposed you have the following json array</p>

<p><code>{&ldquo;apple&rdquo;:&ldquo;twelve&rdquo;, &ldquo;banana&rdquo;: &ldquo;three&rdquo;, &ldquo;oranges&rdquo;: &ldquo;five&rdquo;}</code>, how do you extract the value
of &ldquo;oranges&rdquo; i.e. &ldquo;five&rdquo;?</p>

<p>As simple as this sounds, this took me awhile to figure using <a href="http://code.google.com/p/google-gson/">GSON</a>.</p>

<pre><code>JsonElement jelement = new JsonParser().parse(purchaseInfo);                
result = jelement.getAsJsonObject().get("oranges").getAsString();
</code></pre>

<p>Now <em>result</em> will contains the string &ldquo;five&rdquo;. That was easy! The above was used in my Google
App Engine app.</p>

<p>In English, this would be: &ldquo;the array is a json object with the json object of property "oranges&rdquo;.
Once I have the &ldquo;orange&rdquo; object, give me it&rsquo;s string value which is &ldquo;five&rdquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Request Maker to Post to Google App Engine]]></title>
    <link href="http://nutshellworld.herokuapp.com/blog/2013/08/28/using-request-maker-to-post-to-google-app-engine/"/>
    <updated>2013-08-28T16:07:00+08:00</updated>
    <id>http://nutshellworld.herokuapp.com/blog/2013/08/28/using-request-maker-to-post-to-google-app-engine</id>
    <content type="html"><![CDATA[<p><a href="http://www.requestmaker.com">Request Maker</a> allows you to send GET/POST/GET/PUT/DELETE request to any web url. I was particularly
interested in its ability to send Post messages to my Google App Engine app.</p>

<p>For example, if I want to send foo=bar&amp;mad=man as the request body, I just have to typed
<code>foo=bar&amp;mad=man</code> verbertim into the Request Data form input at request maker.</p>

<p>However, I had difficulty extracting these key-values at Google App Engine using
the <code>request.getParameter(&ldquo;foo&rdquo;)</code> code.</p>

<p>Turns out for it all to work, you need to set the request header&rsquo;s content-type to</p>

<blockquote><p>application/x-www-form-urlencoded; charset=utf-8</p></blockquote>

<p>That helped me and I hope it helps you.</p>
]]></content>
  </entry>
  
</feed>
